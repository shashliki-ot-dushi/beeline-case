#!/usr/bin/env bash
set -euo pipefail

REPO_URL="https://github.com/psf/requests.git"

echo "–ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É —Å use_gpt=true..."
resp=$(curl -s -X POST http://localhost:8003/generate-diagram \
  -H "Content-Type: application/json" \
  -d "{\"repo_url\":\"${REPO_URL}\",\"use_gpt\":true}")
echo "RAW RESPONSE: $resp"

JOB=$(echo "$resp" | jq -r .job_id)
if [[ -z "$JOB" || "$JOB" == "null" ]]; then
  echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å job_id. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ RAW RESPONSE –≤—ã—à–µ."
  exit 1
fi
echo "JOB_ID=$JOB"

echo "–û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏..."
while true; do
  status=$(curl -s http://localhost:8003/generate-diagram/$JOB | jq -r .status)
  echo "  –°—Ç–∞—Ç—É—Å: $status"
  if [[ "$status" == "done" ]]; then
    break
  elif [[ "$status" == "failed" ]]; then
    echo "üö® –ó–∞–¥–∞—á–∞ —É–ø–∞–ª–∞ —Å –æ—à–∏–±–∫–æ–π:"
    curl -s http://localhost:8003/generate-diagram/$JOB | jq .error
    exit 1
  fi
  sleep 5
done

echo "–ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã..."
curl -s http://localhost:8003/jobs/$JOB/elements | jq . > elements.json
echo "elements.json –≥–æ—Ç–æ–≤"

echo "–ü–µ—Ä–≤—ã–µ 10 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏:"
jq '.[] | select(.type=="component" and .description!="" ) | {id,description}' elements.json \
  | head -n 20

echo "–ì–æ—Ç–æ–≤–æ!"
